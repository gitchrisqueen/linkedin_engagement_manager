
services:
  web-app:
    build:
      context: .
      dockerfile: ./compose/local/streamlit/Dockerfile
    image: ${DOCKER_IMAGE_NAME}
    container_name: web-app
    command: /start
    depends_on:
      - mysql
      - redis
    volumes:
      - ./src:/app/src
      # mount test folder
      - ./tests:/app/tests
      # Below used to override the start
      - ./compose/local/streamlit/start:/start
      # Mount the logs folder
      - ./logs:/app/logs
    environment:
      - DISPLAY=:99
    env_file:
      - .env
    ports:
      #  - "5000:5000"  # For the web interface
      - "8000:8000"  # For API endpoints
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"  # For the streamlit app


  redis:
      image: redis:alpine
      container_name: redis
      restart: always
      volumes:
        - redis_data:/data
      ports:
      - "6379:6379"

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - db_data:/var/lib/mysql
      - ./src/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql

  flyway:
    image: redgate/flyway:latest-alpine
    container_name: flyway
    entrypoint: /flyway-entrypoint.sh
    env_file:
      - .env
    volumes:
      - ./src/database/migrations:/flyway/sql
      - ./src/database/flyway-entrypoint.sh:/flyway-entrypoint.sh
    depends_on:
      - mysql

  celery_worker_1:
    image:  ${DOCKER_IMAGE_NAME}
    container_name: celery_worker_1
    command: /start-celeryworker
    #restart: always
    #volumes:
    #  - ./src:/app/src
    volumes_from:
      - web-app
    env_file:
      - .env
    depends_on:
      - redis
      - mysql
      - selenium-hub

  celery_worker_2:
    image: ${DOCKER_IMAGE_NAME}
    container_name: celery_worker_2
    command: /start-celeryworker
    #restart: always
    #volumes:
    #  - ./src:/app/src
    volumes_from:
      - web-app
    env_file:
      - .env
    depends_on:
      - redis
      - mysql
      - selenium-hub

  celery_beat:
    image:  ${DOCKER_IMAGE_NAME}
    container_name: celery_beat
    command: /start-celerybeat
    #restart: always
    #volumes:
    # - ./src:/app/src
    volumes_from:
     - web-app
    env_file:
      - .env
    depends_on:
      - redis
      - mysql

  flower:
    image:  ${DOCKER_IMAGE_NAME}
    container_name: celery_flower
    command: /start-flower
    restart: always
    volumes:
      - ./logs:/app/logs
      - flower_db:/var/lib/flower/flowerdb/flower_db
    #  - ./src:/app/src
    volumes_from:
      - web-app
    env_file:
      - .env
    environment:
      - FLOWER_UNAUTHENTICATED_API=True
      - FLOWER_PERSISTENT=True
      - FLOWER_SAVE_STATE_INTERVAL=5000  # 5s
    ports:
      - "8555:5555"
    depends_on:
      - redis
      - mysql

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"

  node-docker:
    image: selenium/node-docker:latest
    container_name: node-docker
    shm_size: 2gb
    volumes:
      - chrome_profile:/tmp # to persist the chrome user Data dir
      - ./assets:/opt/selenium/assets
      - ./compose/local/node-docker/config.toml:/opt/selenium/docker.toml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_DOCKER_CONFIG_FILENAME=docker.toml
      - SE_VIDEO_FILE_NAME=auto
      #- SE_ENABLE_TRACING=false # Use this if bottom 3 are commented out
      - SE_ENABLE_TRACING=true
      - SE_OTEL_TRACES_EXPORTER=otlp
      - SE_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317
      - SE_VNC_NO_PASSWORD=1
      - SE_NODE_MAX_SESSIONS=4 # This should not be more than the available CPUS
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true # To allow the override of the max sessions
      - SE_START_XVFB=false # Don't start the Xvfb, as we are running headless
    ports:
      - "5555:5555"

  selenium-hub:
    image: selenium/hub:latest
    container_name: selenium-hub
    hostname: selenium-hub
    depends_on:
      - jaeger
    environment:
      #- SE_ENABLE_TRACING=false # Use this if bottom 3 are commented out
      - SE_ENABLE_TRACING=true
      - SE_OTEL_TRACES_EXPORTER=otlp
      - SE_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317
      - SE_VNC_NO_PASSWORD=1
      - SE_ENABLE_BROWSER_LEFTOVERS_CLEANUP=true # Cleanup browser leftovers
      - SE_BROWSER_LEFTOVERS_INTERVAL_SECS=1800 # 30 Minutes
      - SE_BROWSER_LEFTOVERS_TEMPFILES_DAYS=14 # 14 Days
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"

  linkedin-preview:
    build:
      context: ./compose/local/linkedinpreview
      dockerfile: ./Dockerfile
    image: ${DOCKER_IMAGE_NAME}_linkedinpreview
    container_name: linkedin-preview
    environment:
      - NEXT_PUBLIC_GTM_MEASUREMENT_ID=replace_me # TODO: is this needed?
    ports:
      - "8081:3000"  # For the web interface
    volumes:
      - ./compose/local/linkedinpreview/app:/usr/src/app/app
      - ./compose/local/linkedinpreview/components:/usr/src/app/components
      - ./compose/local/linkedinpreview/config:/usr/src/app/config
      - ./compose/local/linkedinpreview/contents:/usr/src/app/contents
      - ./compose/local/linkedinpreview/hooks:/usr/src/app/hooks
      - ./compose/local/linkedinpreview/public:/usr/src/app/public
      - ./compose/local/linkedinpreview/styles:/usr/src/app/styles
      - ./compose/local/linkedinpreview/types:/usr/src/app/types
      - ./compose/local/linkedinpreview/utils:/usr/src/app/utils

volumes:
  db_data:
  redis_data:
  chrome_profile:
  flower_db:
